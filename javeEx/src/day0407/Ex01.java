package day0407;

public class Ex01 {}
/*  
 	멤버 변수 = 인스턴스 변수 
 
 
	생성자( Constructor )
		new 연산자와 함께 사용
		객체를 생성할 때 호출 됨
		객체의 초기화를 담당
		
	생성자 형태
		클래스명(매개변수, ...){ 
		   객체 초기화 코드
		}
		- 생성자는 클래스명과 동일해야함
		- 메서드와 형태는 비슷하지만, 리턴타입이 없다.
	
	기본 생성자
		모든 클래스는 반드시 생성자를 가지며, 한 개 이상의 생성자가 존재한다.
		클래스 내에 생성자를 선언하지 않으면 
			-> 컴파일러가 기본생성자를 자동으로 추가해준다.
		클래스 내에 매개변수가 있는 생성자가 존재하면 기본생성자 사용 불가
			-> 기본생성자(매개변수가 없는)를 직접 선언해야함

	변수를 초기화하는 방법
		1. 선언과 동시에 초기화 
			-> 모든 객체가 동일한 값을 갖게 된다.
			-> 이후 값 변경이 가능하다.
		2. 생성자를 이용한 초기화 
			-> 객체가 생성될 때 다른 값으로 초기화 가능
			-> 생성자의 매개변수 값을 받아 초기화 
			
	생성자 오버로딩 
		같은 클래스에서 매개변수의 개수, 타입, 순서를 다르게 하여 여러개의 생성자를 선언하는 것.
		변수이름 상관 없음
		
	this() : 다른 생성자 호출
		생성자 오버로딩이 많아지면 중복 코드가 발생할 수 있다.
		this()를 사용하여 중복 코드 방지
		생성자 블록{} 안의 첫번째 줄에 위치해야 함 
		
	this. 키워드
		 클래스 자기 자신을 의미
		 매개변수의 이름과 멤버변수와 이름이 같을 때 구분하기 위해서 사용
		 생성자와 메서드 내에서 사용
		 블럭{} 안의 첫번째 줄에 위치해야 함


















*/
